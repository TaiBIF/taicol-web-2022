version: '3.7'

services:
  django:
    build: .
    container_name: tc-web-django-stag-container
    image: tc-web-django-stag-image
    ports:
      - 8001:8001
    depends_on:
      - postgres
      - mysql
    links:
      - postgres:postgres
      - mysql:mysql
    volumes:
      - .:/code
      - ../tc-web-volumes/static:/tc-web-volumes/static
      - ../tc-web-volumes/media:/tc-web-volumes/media
      - ../tc-web-volumes/bucket:/bucket
    command: /srv/start
    restart: always
    env_file:
      - .env
    extra_hosts:
      - "host.docker.internal:host-gateway"
  postgres:
    image: postgres:14-alpine
    shm_size: '1g'
    container_name: tc-stag-postgres-container
    restart: always
    volumes:
      - ../tc-web-volumes/pgdata:/var/lib/postgresql/data/pgdata
      - ../tc-web-volumes/bucket:/bucket
      - ../tc-web-volumes/media/archive:/archive
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
    env_file:
     - .env
  mysql:
    build: ./scripts/mysql
    container_name: tc-web-mysql-container
    ports:
      - "3307:3306"
    image: tc-web-mysql-image
    restart: always
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "true"
    # env_file:
      # - ./app/.env
    volumes:
      - ../tc-web-volumes/mysql:/var/lib/mysql:rw
      - ../tc-web-volumes/bucket:/bucket
      # - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql:rw
    command:
      [
        "mysqld",
        "--character-set-server=utf8mb4",
        "--collation-server=utf8mb4_unicode_ci",
      ]

  # nginx:
  #   image: nginx:1.19.10-alpine
  #   restart: always
  #   ports:
  #     - 80:80
  #   volumes:
  #     - ./scripts/nginx/staging:/etc/nginx/conf.d
  #     - ../tc-web-volumes/static:/tc-web-volumes/static
  #     - ../tc-web-volumes/media:/tc-web-volumes/media
  #     - ../tc-web-volumes/logs/nginx:/var/log/nginx
  #   links:
  #     - django:django
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "1m"
  #       max-file: "3"
