networks:
  gateway:
    external: true

services:
  django:
    build: .
    container_name: tc-web-django-prod-container
    image: tc-web-django-prod-image
    ports:
      - 8001:8001
    depends_on:
      - postgres
    volumes:
      - .:/code
      - ../tc-web-volumes/static:/tc-web-volumes/static
      - ../tc-web-volumes/media:/tc-web-volumes/media
      - ../tc-web-volumes/bucket:/bucket
    command: /srv/start
    restart: always
    env_file:
      - .env
  postgres:
    image: postgres:14-alpine
    shm_size: '1g'
    container_name: tc-stag-postgres-container
    restart: always
    volumes:
      - ../tc-web-volumes/pgdata:/var/lib/postgresql/data/pgdata
      - ../tc-web-volumes/bucket:/bucket
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
    env_file:
     - .env
    networks:
      - gateway
  solr:
    build: ./solr-workspace
    image: taicol-solr-image
    container_name: taicol-solr-container
    ports:
      - "8983:8983"
    restart: always
    volumes:
      - ../tc-web-volumes/solr:/var/solr
      - ../tc-web-volumes/bucket:/bucket
      - ./solr-workspace/:/workspace
    networks:
      - gateway
    # environment:
    #   - SOLR_JAVA_MEM=-Xms4g -Xmx4g
  # nginx:
  #   image: nginx:1.19.10-alpine
  #   restart: always
  #   ports:
  #     - 80:80
  #   volumes:
  #     - ./scripts/nginx/staging:/etc/nginx/conf.d
  #     - ../tc-web-volumes/static:/tc-web-volumes/static
  #     - ../tc-web-volumes/media:/tc-web-volumes/media
  #     - ../tc-web-volumes/logs/nginx:/var/log/nginx
  #   links:
  #     - django:django
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "1m"
  #       max-file: "3"
